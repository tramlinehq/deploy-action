# action.yml
name: 'Configure Tramline'
description: 'Checkout the correct ref & parse JSON inputs'
branding:
  icon: 'arrow-down-circle'
  color: 'green'
inputs:
  input:
    description: "Input from Tramline as a JSON blob"
    required: true
    default: "{}"
outputs:
  version_code:
    description: 'the version code (build number) for the build'
    value: ${{ steps.tramline.outputs.version_code }}
  version_name:
    description: 'the version name for the build'
    value: ${{ steps.tramline.outputs.version_name }}
  commit_ref:
    description: 'the commit for which this workflow is triggered'
    value: ${{ steps.tramline.outputs.commit_ref }}
  build_notes:
    description: 'the testing notes for the build'
    value: ${{ steps.tramline.outputs.build_notes }}
runs:
  using: "composite"
  steps:
    
    - name: print
      shell: bash
      run: python --version
  
    - name: setup-python
      uses: actions/setup-python@v5
      with:
         python-version: '3.13'
      run: python --version

    - name: print
      shell: bash
      run: python --version
        
    - name: Parse Tramline Input
      shell: python
      id: tramline
      run: |
        import json
        import os
        
        print("deploy-action: starting")
        
        # Read input JSON
        input_json = r'''${{ inputs.input }}'''
        print("deploy-action: input received")
        
        # Parse and process
        data = json.loads(input_json)
        print("deploy-action: JSON parsed successfully")
        
        # Write outputs
        with open(os.environ['GITHUB_OUTPUT'], 'a') as f:
            for key, value in data.items():
                f.write(f"{key}<<EOF\n")
                f.write(f"{value}\n")
                f.write("EOF\n")

        print("deploy-action: outputs written successfully")

    - name: Checkout the repo
      uses: actions/checkout@v4
      with:
        ref: ${{ steps.tramline.outputs.commit_ref }}
